# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: NextJs test build

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['dev']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Detect package manager
      #   id: detect-package-manager
      #   run: |
      #     echo "runner=npx --no-install" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: npm

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build with Next.js
        run: npm run build

      # - name: Cypress install
      #   uses: cypress-io/github-action@v6
      #   with:
      #     # Disable running of tests within install job
      #     runTests: false
      #     build: npm run build

      # - name: Save build folder
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: node-app
      #     path: .

  cypress-run:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Download the build folder
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: node-app

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run cypress:run
          browser: chrome

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
        # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  jest-run:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Download the build folder
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: node-app

      - name: Jest run
        run: npm run test

  # after-tests:
  #   needs: ["cypress-run","jest-run"]
